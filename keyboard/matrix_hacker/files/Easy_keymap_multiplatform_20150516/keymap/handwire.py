#!/usr/bin/env python

"""Easy AVR USB Keyboard Firmware Keymapper.

Copyright 2013 David Howland, All rights reserved.

"""

description = "Handwire Matrix"
unique_id = "HANDWIRE_001"
firmware = "PHANTOM"

display_height = int(6*4)
display_width = int(17*4)

num_rows = 6
num_cols = 17
num_leds = 2

uc_size = 'large'

#autogen start
layers_map = 0x000009ea

actions_map = 0x000005ee

tapkeys_map = 0x000001f2

macro_map = 0x00000de6

led_map = 0x00001de6
bl_mask_map = None

pw_defs_map = 0x00001e2a

led_hw_map = 0x00001df6
row_hw_map = 0x00001e1e
col_hw_map = 0x00001dfc
#autogen finish

led_definition = [
    ('LED0', 'Caps Lock'),
    ('LED1', 'Scroll Lock')
]

backlighting = False

keyboard_definition = [
    [((4, 4), (0, 0), '0'),
     ((4, 4), (0, 1), '0'),
     ((4, 4), (0, 2), '0'),
     ((4, 4), (0, 3), '0'),
     ((4, 4), (0, 4), '0'),
     ((4, 4), (0, 5), '0'),
     ((4, 4), (0, 6), '0'),
     ((4, 4), (0, 7), '0'),
     ((4, 4), (0, 8), '0'),
     ((4, 4), (0, 9), '0'),
     ((4, 4), (0, 10), '0'),
     ((4, 4), (0, 11), '0'),
     ((4, 4), (0, 12), '0'),
     ((4, 4), (0, 13), '0'),
     ((4, 4), (0, 14), '0'),
     ((4, 4), (0, 15), '0'),
     ((4, 4), (0, 16), '0')],

    [((4, 4), (1, 0), '0'),
     ((4, 4), (1, 1), '0'),
     ((4, 4), (1, 2), '0'),
     ((4, 4), (1, 3), '0'),
     ((4, 4), (1, 4), '0'),
     ((4, 4), (1, 5), '0'),
     ((4, 4), (1, 6), '0'),
     ((4, 4), (1, 7), '0'),
     ((4, 4), (1, 8), '0'),
     ((4, 4), (1, 9), '0'),
     ((4, 4), (1, 10), '0'),
     ((4, 4), (1, 11), '0'),
     ((4, 4), (1, 12), '0'),
     ((4, 4), (1, 13), '0'),
     ((4, 4), (1, 14), '0'),
     ((4, 4), (1, 15), '0'),
     ((4, 4), (1, 16), '0')],

    [((4, 4), (2, 0), '0'),
     ((4, 4), (2, 1), '0'),
     ((4, 4), (2, 2), '0'),
     ((4, 4), (2, 3), '0'),
     ((4, 4), (2, 4), '0'),
     ((4, 4), (2, 5), '0'),
     ((4, 4), (2, 6), '0'),
     ((4, 4), (2, 7), '0'),
     ((4, 4), (2, 8), '0'),
     ((4, 4), (2, 9), '0'),
     ((4, 4), (2, 10), '0'),
     ((4, 4), (2, 11), '0'),
     ((4, 4), (2, 12), '0'),
     ((4, 4), (2, 13), '0'),
     ((4, 4), (2, 14), '0'),
     ((4, 4), (2, 15), '0'),
     ((4, 4), (2, 16), '0')],

    [((4, 4), (3, 0), '0'),
     ((4, 4), (3, 1), '0'),
     ((4, 4), (3, 2), '0'),
     ((4, 4), (3, 3), '0'),
     ((4, 4), (3, 4), '0'),
     ((4, 4), (3, 5), '0'),
     ((4, 4), (3, 6), '0'),
     ((4, 4), (3, 7), '0'),
     ((4, 4), (3, 8), '0'),
     ((4, 4), (3, 9), '0'),
     ((4, 4), (3, 10), '0'),
     ((4, 4), (3, 11), '0'),
     ((4, 4), (3, 12), '0'),
     ((4, 4), (3, 13), '0'),
     ((4, 4), (3, 14), '0'),
     ((4, 4), (3, 15), '0'),
     ((4, 4), (3, 16), '0')],

    [((4, 4), (4, 0), '0'),
     ((4, 4), (4, 1), '0'),
     ((4, 4), (4, 2), '0'),
     ((4, 4), (4, 3), '0'),
     ((4, 4), (4, 4), '0'),
     ((4, 4), (4, 5), '0'),
     ((4, 4), (4, 6), '0'),
     ((4, 4), (4, 7), '0'),
     ((4, 4), (4, 8), '0'),
     ((4, 4), (4, 9), '0'),
     ((4, 4), (4, 10), '0'),
     ((4, 4), (4, 11), '0'),
     ((4, 4), (4, 12), '0'),
     ((4, 4), (4, 13), '0'),
     ((4, 4), (4, 14), '0'),
     ((4, 4), (4, 15), '0'),
     ((4, 4), (4, 16), '0')],

    [((4, 4), (5, 0), '0'),
     ((4, 4), (5, 1), '0'),
     ((4, 4), (5, 2), '0'),
     ((4, 4), (5, 3), '0'),
     ((4, 4), (5, 4), '0'),
     ((4, 4), (5, 5), '0'),
     ((4, 4), (5, 6), '0'),
     ((4, 4), (5, 7), '0'),
     ((4, 4), (5, 8), '0'),
     ((4, 4), (5, 9), '0'),
     ((4, 4), (5, 10), '0'),
     ((4, 4), (5, 11), '0'),
     ((4, 4), (5, 12), '0'),
     ((4, 4), (5, 13), '0'),
     ((4, 4), (5, 14), '0'),
     ((4, 4), (5, 15), '0'),
     ((4, 4), (5, 16), '0')]
]

alt_layouts = {}

if __name__ == '__main__':
    print("Keyboard definition for Phantom keyboard")
